#
msgid ""
msgstr ""
"Project-Id-Version: DesignPatternsPHP 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 12:18+0200\n"
"PO-Revision-Date: 2020-10-05 23:23+0200\n"
"Last-Translator: RedDevilus\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: nl\n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.1\n"

#: ../../Behavioral/TemplateMethod/README.rst:2
msgid "`Template Method`__"
msgstr "`Sjabloonmethode`__"

#: ../../Behavioral/TemplateMethod/README.rst:5
msgid "Purpose"
msgstr "Doel"

#: ../../Behavioral/TemplateMethod/README.rst:7
msgid "Template Method is a behavioral design pattern."
msgstr "Sjabloonmethode is een gedragsontwerppatroon."

#: ../../Behavioral/TemplateMethod/README.rst:9
msgid ""
"Perhaps you have encountered it many times already. The idea is to let subclasses of this abstract template \"finish\" "
"the behavior of an algorithm."
msgstr ""
"Misschien ben je het al vaak tegengekomen. Het idee is om subklassen van deze abstracte sjabloon het gedrag van een "
"algoritme te laten \"afmaken\"."

#: ../../Behavioral/TemplateMethod/README.rst:13
msgid ""
"A.k.a the \"Hollywood principle\": \"Don't call us, we call you.\" This class is not called by subclasses but the "
"inverse. How? With abstraction of course."
msgstr ""
"Ook bekend als het \"Hollywood-principe\": \"Bel ons niet, wij bellen jou.\" Deze klasse wordt niet aangeroepen door "
"subklassen, maar de inverse. Hoe? Met abstractie natuurlijk."

#: ../../Behavioral/TemplateMethod/README.rst:17
msgid ""
"In other words, this is a skeleton of algorithm, well-suited for framework libraries. The user has just to implement "
"one method and the superclass do the job."
msgstr ""
"Met andere woorden, dit is een skelet van algoritme, zeer geschikt voor framework-bibliotheken. De gebruiker hoeft "
"maar één methode te implementeren en de superklasse doet het werk."

#: ../../Behavioral/TemplateMethod/README.rst:21
msgid "It is an easy way to decouple concrete classes and reduce copy-paste, that's why you'll find it everywhere."
msgstr ""
"Het is een gemakkelijke manier om concrete klassen te ontkoppelen en copy-paste te verminderen, daarom vind je het "
"overal."

#: ../../Behavioral/TemplateMethod/README.rst:25
msgid "UML Diagram"
msgstr "UML Diagram"

#: ../../Behavioral/TemplateMethod/README.rst:32
msgid "Code"
msgstr "Code"

#: ../../Behavioral/TemplateMethod/README.rst:34
msgid "You can also find this code on `GitHub`_"
msgstr "Je kan deze broncode terugvinden op `GitHub`_"

#: ../../Behavioral/TemplateMethod/README.rst:55
msgid "Test"
msgstr "Test"
