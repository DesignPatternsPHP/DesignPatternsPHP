# 
msgid ""
msgstr ""
"Project-Id-Version: DesignPatternsPHP 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 12:18+0200\n"
"PO-Revision-Date: 2019-04-15 14:00-0300\n"
"Last-Translator: Pablo Juan Garcia <contato@pablogarcia.com.br>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"

#: ../../Behavioral/Visitor/README.rst:2
msgid "`Visitor`__"
msgstr "`Visitante (Visitor)`__"

#: ../../Behavioral/Visitor/README.rst:5
msgid "Purpose"
msgstr "Objetivo"

#: ../../Behavioral/Visitor/README.rst:7
msgid ""
"The Visitor Pattern lets you outsource operations on objects to other "
"objects. The main reason to do this is to keep a separation of concerns. But"
" classes have to define a contract to allow visitors (the ``Role::accept`` "
"method in the example)."
msgstr ""
"O Padrão Visitante deixa as suas operações terceirizadas em objetos para "
"outros objetos. A principal razão para fazer isto é manter a separação de "
"preocupações. Porém, classes precisam definir um contrato para permitir "
"visitantes (o método ``Role::accept`` no exemplo)."

#: ../../Behavioral/Visitor/README.rst:12
msgid ""
"The contract is an abstract class but you can have also a clean interface. "
"In that case, each Visitor has to choose itself which method to invoke on "
"the visitor."
msgstr ""
"O contrato é uma classe abstrata, mas você pode ter também uma interface limpa. "
"Neste caso, cada visitante tem que escolher a si mesmo qual método invocar no "
"visitante."

#: ../../Behavioral/Visitor/README.rst:17
msgid "UML Diagram"
msgstr "Diagrama UML"

#: ../../Behavioral/Visitor/README.rst:24
msgid "Code"
msgstr "Código"

#: ../../Behavioral/Visitor/README.rst:26
msgid "You can also find this code on `GitHub`_"
msgstr "Você também pode encontrar este código no `GitHub`_"

#: ../../Behavioral/Visitor/README.rst:59
msgid "Test"
msgstr "Teste"
