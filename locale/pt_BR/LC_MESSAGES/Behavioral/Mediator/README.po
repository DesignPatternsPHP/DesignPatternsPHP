# 
msgid ""
msgstr ""
"Project-Id-Version: DesignPatternsPHP 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 12:18+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../Behavioral/Mediator/README.rst:2
msgid "`Mediator`__"
msgstr ""

#: ../../Behavioral/Mediator/README.rst:5
msgid "Purpose"
msgstr ""

#: ../../Behavioral/Mediator/README.rst:7
msgid ""
"This pattern provides an easy way to decouple many components working "
"together. It is a good alternative to Observer IF you have a \"central "
"intelligence\", like a controller (but not in the sense of the MVC)."
msgstr ""

#: ../../Behavioral/Mediator/README.rst:11
msgid ""
"All components (called Colleague) are only coupled to the MediatorInterface "
"and it is a good thing because in OOP, one good friend is better than many. "
"This is the key-feature of this pattern."
msgstr ""

#: ../../Behavioral/Mediator/README.rst:16
msgid "UML Diagram"
msgstr ""

#: ../../Behavioral/Mediator/README.rst:23
msgid "Code"
msgstr ""

#: ../../Behavioral/Mediator/README.rst:25
msgid "You can also find these code on `GitHub`_"
msgstr ""

#: ../../Behavioral/Mediator/README.rst:27
msgid "MediatorInterface.php"
msgstr ""

#: ../../Behavioral/Mediator/README.rst:33
msgid "Mediator.php"
msgstr ""

#: ../../Behavioral/Mediator/README.rst:39
msgid "Colleague.php"
msgstr ""

#: ../../Behavioral/Mediator/README.rst:45
msgid "Subsystem/Client.php"
msgstr ""

#: ../../Behavioral/Mediator/README.rst:51
msgid "Subsystem/Database.php"
msgstr ""

#: ../../Behavioral/Mediator/README.rst:57
msgid "Subsystem/Server.php"
msgstr ""

#: ../../Behavioral/Mediator/README.rst:64
msgid "Test"
msgstr ""

#: ../../Behavioral/Mediator/README.rst:66
msgid "Tests/MediatorTest.php"
msgstr ""
