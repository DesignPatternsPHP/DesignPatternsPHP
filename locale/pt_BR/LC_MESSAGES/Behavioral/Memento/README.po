# Translation of Memento Pattern to pt_BR.
# Copyright (C) 2015, Dominik Liebler and contributors
# This file is distributed under the same license as the DesignPatternsPHP
# package.
# Pablo Juan Garcia <contato@pablogarcia.com.br>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DesignPatternsPHP 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 12:18+0200\n"
"PO-Revision-Date: 2019-02-26 10:49-0300\n"
"Last-Translator: Pablo Juan Garcia <contato@pablogarcia.com.br>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"

#: ../../Behavioral/Memento/README.rst:2
msgid "`Memento`__"
msgstr "`Memento (Lembrança)`__"

#: ../../Behavioral/Memento/README.rst:5
msgid "Purpose"
msgstr "Objetivo"

#: ../../Behavioral/Memento/README.rst:7
msgid ""
"It provides the ability to restore an object to it's previous state (undo "
"via rollback) or to gain access to state of the object, without revealing "
"it's implementation (i.e., the object is not required to have a function "
"to return the current state)."
msgstr ""
"Ele provê a habilidade de restaurar um objeto para seu estado anterior ("
"desfazer via rollback) ou ganhar acesso ao estado do objeto sem revelar "
"sua implementação (p.e. o objeto não é obrigado a ter uma funcionalidade "
"para retornar ao estado atual)."

#: ../../Behavioral/Memento/README.rst:12
msgid ""
"The memento pattern is implemented with three objects: the Originator, a "
"Caretaker and a Memento."
msgstr ""
"O padrão Memento é implementado com três objetos: o Originator, um Caretaker "
"e um Memento."

#: ../../Behavioral/Memento/README.rst:15
msgid ""
"Memento – an object that *contains a concrete unique snapshot of state* "
"of any object or resource: string, number, array, an instance of class "
"and so on. The uniqueness in this case does not imply the prohibition "
"existence of similar states in different snapshots. That means the state "
"can be extracted as the independent clone. Any object stored in the "
"Memento should be *a full copy of the original object rather than a "
"reference* to the original object. The Memento object is a \"opaque "
"object\" (the object that no one can or should change)."
msgstr ""
"Memento - um objeto que *contém um snapshot único e concreto do estado* "
"de qualquer objeto ou recurso: string, número, array, uma instance de classe "
"e assim por diante. A singularidade, neste caso, não implica a proibição "
"da existência de estados semelhantes em diferentes snapshots. Isso significa que o estado "
"pode ser extraído como o clone independente. Qualquer objeto armazenado no "
"Memento deve ser *uma cópia completa do objeto original em vez de uma "
"referência* para o objeto original. O objeto Memento é um \"objeto "
"opaco\" (o objeto que ninguém pode ou deve mudar)."

#: ../../Behavioral/Memento/README.rst:24
msgid ""
"Originator – it is an object that contains the *actual state of an "
"external object is strictly specified type*. Originator is able to create"
" a unique copy of this state and return it wrapped in a Memento. The "
"Originator does not know the history of changes. You can set a concrete "
"state to Originator from the outside, which will be considered as actual."
" The Originator must make sure that given state corresponds the allowed "
"type of object. Originator may (but not should) have any methods, but "
"they *they can't make changes to the saved object state*."
msgstr ""
"Originator - é um objeto que contém o *estado atual de um "
"objeto externo é estritamente o tipo especificado*. Originator é capaz de criar "
"uma cópia única deste estado e devolvê-lo envolto em um Memento. O "
"O Originator não conhece a história das mudanças. Você pode definir um estado "
"concreto ao Originator do lado de fora, que será considerado como atual. "
"O Originator deve certificar-se de que determinado estado corresponde ao tipo "
"permitido de objeto. Originator pode (mas não deve) ter quaisquer métodos, mas "
"eles *não podem fazer alterações no estado do objeto salvo*."

#: ../../Behavioral/Memento/README.rst:33
msgid ""
"Caretaker *controls the states history*. He may make changes to an "
"object; take a decision to save the state of an external object in the "
"Originator; ask from the Originator snapshot of the current state; or set"
" the Originator state to equivalence with some snapshot from history."
msgstr ""
"Caretaker *controla a história dos estados*. Ele pode fazer alterações em um "
"objeto; tomar uma decisão para salvar o estado de um objeto externo no "
"Originator; pedir a partir do snapshot do Originator do estado atual ou definir "
"o estado do Originator para equivalência com algum snapshot do histórico."

#: ../../Behavioral/Memento/README.rst:39
msgid "Examples"
msgstr "Exemplos"

#: ../../Behavioral/Memento/README.rst:41
msgid "The seed of a pseudorandom number generator"
msgstr "A semente de um gerador de números pseudo-aleatórios"

#: ../../Behavioral/Memento/README.rst:42
msgid "The state in a finite state machine"
msgstr "O estado em uma máquina de estados finitos"

#: ../../Behavioral/Memento/README.rst:43
msgid ""
"Control for intermediate states of `ORM Model "
"<http://en.wikipedia.org/wiki/Object-relational_mapping>`_ before saving"
msgstr ""
"Controle para estados intermediários de `ORM Model "
"<https://pt.wikipedia.org/wiki/Mapeamento_objeto-relacional>`_ antes de salvar"

#: ../../Behavioral/Memento/README.rst:46
msgid "UML Diagram"
msgstr "Diagrama UML"

#: ../../Behavioral/Memento/README.rst:53
msgid "Code"
msgstr "Código"

#: ../../Behavioral/Memento/README.rst:55
msgid "You can also find this code on `GitHub`_"
msgstr "Você também pode encontrar este código no `GitHub`_"

#: ../../Behavioral/Memento/README.rst:76
msgid "Test"
msgstr "Teste"