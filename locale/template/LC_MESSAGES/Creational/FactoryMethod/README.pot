msgid ""
msgstr ""
"Project-Id-Version: DesignPatternsPHP "
"d4972f03fc93de3ef10bb31220de49931487d5e0\n"
"POT-Creation-Date: 2016-09-19 17:00-0500\n"
"Last-Translator: Axel Pardemann <axelitusdev@gmail.com>\n"
"Content-Type: text/plain; "
"charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../Creational/FactoryMethod/README.rst:1
msgid "Factory Method"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:4
msgid "Purpose"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:7
msgid ""
"The good point over the SimpleFactory is you can subclass it to "
"implement different ways to create objects."
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:10
msgid "For simple case, this abstract class could be just an interface."
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:12
msgid ""
"This pattern is a \"real\" Design Pattern because it achieves the "
"Dependency Inversion Principle" a.k.a the "D" in S.O.L.I.D principles."
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:15
msgid ""
"It means the FactoryMethod class depends on abstractions, not concrete "
"classes. This is the real trick compared to SimpleFactory or "
"StaticFactory."
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:19
msgid "UML Diagram"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:23
msgid "Alt FactoryMethod UML Diagram"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:26
msgid "Code"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:29
msgid "You can also find these code on `GitHub`_"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:73
msgid "Test"
msgstr ""