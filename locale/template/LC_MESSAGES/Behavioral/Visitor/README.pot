msgid ""
msgstr ""
"Project-Id-Version: DesignPatternsPHP "
"d4972f03fc93de3ef10bb31220de49931487d5e0\n"
"POT-Creation-Date: 2016-09-19 17:00-0500\n"
"Last-Translator: Axel Pardemann <axelitusdev@gmail.com>\n"
"Content-Type: text/plain; "
"charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../Behavioral/Visitor/README.rst:1
msgid "Visitor"
msgstr ""

#: ../../Behavioral/Visitor/README.rst:4
msgid "Purpose"
msgstr ""

#: ../../Behavioral/Visitor/README.rst:7
msgid ""
"The Visitor Pattern lets you outsource operations on objects to other "
"objects. The main reason to do this is to keep a separation of concerns. "
"But classes have to define a contract to allow visitors (the "
"``Role::accept`` method in the example)."
msgstr ""

#: ../../Behavioral/Visitor/README.rst:12
msgid ""
"The contract is an abstract class but you can have also a clean "
"interface. In that case, each Visitor has to choose itself which method "
"to invoke on the visitor."
msgstr ""

#: ../../Behavioral/Visitor/README.rst:16
msgid "UML Diagram"
msgstr ""

#: ../../Behavioral/Visitor/README.rst:20
msgid "Alt Visitor UML Diagram"
msgstr ""

#: ../../Behavioral/Visitor/README.rst:23
msgid "Code"
msgstr ""

#: ../../Behavioral/Visitor/README.rst:26
msgid "You can also find these code on `GitHub`_"
msgstr ""

#: ../../Behavioral/Visitor/README.rst:58
msgid "Test"
msgstr ""