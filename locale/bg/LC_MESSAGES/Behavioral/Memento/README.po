# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Dominik Liebler and contributors
# This file is distributed under the same license as the DesignPatternsPHP
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: DesignPatternsPHP 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-03 23:59+0200\n"
"PO-Revision-Date: 2020-11-27 17:21+0200\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.1\n"
"Last-Translator: Vladimir Dediuc <code.geeks1@gmail.com>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Language: bg\n"

#: ../../Behavioral/Memento/README.rst:2
msgid "`Memento`__"
msgstr "`Спомен`__"

#: ../../Behavioral/Memento/README.rst:5
msgid "Purpose"
msgstr "Предназначение"

#: ../../Behavioral/Memento/README.rst:7
msgid ""
"It provides the ability to restore an object to it's previous state (undovia "
"rollback) or to gain access to state of the object, without revealingit's "
"implementation (i.e., the object is not required to have a functionto return "
"the current state)."
msgstr ""
"Осигурява възможност за възстановяване на обект в предишното му състояние "
"(отмяна чрез връщане назад) или за получаване на достъп до състоянието на "
"обекта, без да се разкрива изпълнението му (т.е. обектът не трябва да има "
"функция за връщане на текущото състояние)."

#: ../../Behavioral/Memento/README.rst:12
msgid ""
"The memento pattern is implemented with three objects: the Originator, a "
"Caretaker and a Memento."
msgstr ""
"Шаблон е реализиран с три обекта: Originator (Оригинатор), a Caretaker "
"(Пазител) и Memento (Спомен)."

#: ../../Behavioral/Memento/README.rst:15
msgid ""
"Memento – an object that *contains a concrete unique snapshot of state* of "
"any object or resource: string, number, array, an instance of class and so "
"on. The uniqueness in this case does not imply the prohibition existence of "
"similar states in different snapshots. That means the state can be extracted "
"as the independent clone. Any object stored in the Memento should be *a full "
"copy of the original object rather than a reference* to the original object. "
"The Memento object is a \"opaque object\" (the object that no one can or "
"should change)."
msgstr ""
"Memento - обект, който * съдържа конкретна уникална снимка на състоянието * "
"на всеки обект или ресурс: низ, число, масив, екземпляр на клас и така "
"нататък. Уникалността в този случай не означава забрана за съществуването на "
"подобни състояния в различни моментни снимки. Това означава, че състояние "
"може да бъде извлечено като независим клон. Всеки обект, съхраняван в "
"Memento, трябва да бъде * пълно копие на оригиналния обект, а не препратка * "
"към оригиналния обект. Обектът Memento е „непрозрачен обект“ (обектът, който "
"никой не може или не трябва да променя)."

#: ../../Behavioral/Memento/README.rst:24
msgid ""
"Originator – it is an object that contains the *actual state of an external "
"object is strictly specified type*. Originator is able to create a unique "
"copy of this state and return it wrapped in a Memento. The Originator does "
"not know the history of changes. You can set a concrete state to Originator "
"from the outside, which will be considered as actual. The Originator must "
"make sure that given state corresponds the allowed type of object. "
"Originator may (but not should) have any methods, but they *they can't make "
"changes to the saved object state*."
msgstr ""
"Originator - това е обект, който съдържа * действителното състояние на "
"външен обект е строго определен тип *. Originator е в състояние да създаде "
"уникално копие на това състояние и да го върне увито в спомен. Originator не "
"знае историята на промените. Можете да зададете конкретно състояние на "
"Originator отвън, което ще се счита за действително. Originator трябва да се "
"увери, че дадено състояние съответства на разрешения тип обект. Originator "
"може (но не трябва) да има някакви методи, но те * не могат да правят "
"промени в състоянието на запазения обект *."

#: ../../Behavioral/Memento/README.rst:33
msgid ""
"Caretaker *controls the states history*. He may make changes to an object; "
"take a decision to save the state of an external object in the Originator; "
"ask from the Originator snapshot of the current state; or set the Originator "
"state to equivalence with some snapshot from history."
msgstr ""
"Caretaker * контролира историята на състояния *. Той може да прави промени в "
"обект; взима решение за запазване на състоянието на външен обект в "
"Originator; поиска моментна снимка на текущото състояние от Originator; или "
"зададе състоянието на Originator еквивалентно на някаква снимка от историята."

#: ../../Behavioral/Memento/README.rst:39
msgid "Examples"
msgstr "Примери"

#: ../../Behavioral/Memento/README.rst:41
msgid "The seed of a pseudorandom number generator"
msgstr "To seed генератор на псевдослучайни числа"

#: ../../Behavioral/Memento/README.rst:42
msgid "The state in a finite state machine"
msgstr "Състоянието в краен автомат"

#: ../../Behavioral/Memento/README.rst:43
msgid ""
"Control for intermediate states of `ORM Model <http://en.wikipedia.org/wiki/"
"Object-relational_mapping>`_ before saving"
msgstr ""
"Контрол за междинни състояния на `ORM Model <http://en.wikipedia.org/wiki/"
"Object-relational_mapping>`_ преди запазване"

#: ../../Behavioral/Memento/README.rst:46
msgid "UML Diagram"
msgstr "UML Диаграма"

#: ../../Behavioral/Memento/README.rst:53
msgid "Code"
msgstr "Код"

#: ../../Behavioral/Memento/README.rst:55
msgid "You can also find this code on `GitHub`_"
msgstr "Можете също да намерите този код в `GitHub`_"

#: ../../Behavioral/Memento/README.rst:76
msgid "Test"
msgstr "Тест"
