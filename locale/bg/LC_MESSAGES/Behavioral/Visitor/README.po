#
msgid ""
msgstr ""
"Project-Id-Version: DesignPatternsPHP 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 12:18+0200\n"
"PO-Revision-Date: 2020-11-28 14:02+0200\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.1\n"
"Last-Translator: Vladimir Dediuc <code.geeks1@gmail.com>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Language: bg\n"

#: ../../Behavioral/Visitor/README.rst:2
msgid "`Visitor`__"
msgstr "`Посетител`__"

#: ../../Behavioral/Visitor/README.rst:5
msgid "Purpose"
msgstr "Предназначение"

#: ../../Behavioral/Visitor/README.rst:7
msgid ""
"The Visitor Pattern lets you outsource operations on objects to other "
"objects. The main reason to do this is to keep a separation of concerns. But "
"classes have to define a contract to allow visitors (the ``Role::accept`` "
"method in the example)."
msgstr ""
"Посетител (шаблон) ви позволява да възлагате операции върху обекти на други "
"обекти. Основната причина да направите това е да поддържате разделение на "
"проблемите. Но класовете трябва да дефинират договор, който да позволи на "
"посетителите (методът ``Role::accept`` в примера)."

#: ../../Behavioral/Visitor/README.rst:12
msgid ""
"The contract is an abstract class but you can have also a clean interface. "
"In that case, each Visitor has to choose itself which method to invoke on "
"the visitor."
msgstr ""
"Договорът е абстрактен клас, но можете да имате и изчистен интерфейс. В този "
"случай всеки посетител трябва сам да избере кой метод на посетителя да "
"извика."

#: ../../Behavioral/Visitor/README.rst:17
msgid "UML Diagram"
msgstr "UML Диаграма"

#: ../../Behavioral/Visitor/README.rst:24
msgid "Code"
msgstr "Код"

#: ../../Behavioral/Visitor/README.rst:26
msgid "You can also find this code on `GitHub`_"
msgstr "Можете също да намерите този код в `GitHub`_"

#: ../../Behavioral/Visitor/README.rst:59
msgid "Test"
msgstr "Тест"
