#
msgid ""
msgstr ""
"Project-Id-Version: DesignPatternsPHP 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 12:18+0200\n"
"PO-Revision-Date: 2020-11-28 19:37+0200\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.1\n"
"Last-Translator: Vladimir Dediuc <code.geeks1@gmail.com>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Language: bg\n"

#: ../../Creational/Pool/README.rst:2
msgid "`Pool`__"
msgstr "`Pool`__"

#: ../../Creational/Pool/README.rst:4
msgid ""
"The **object pool pattern** is a software creational design pattern that "
"uses a set of initialized objects kept ready to use – a \"pool\" – rather "
"than allocating and destroying them on demand. A client of the pool will "
"request an object from the pool and perform operations on the returned "
"object. When the client has finished, it returns the object, which is a "
"specific type of factory object, to the pool rather than destroying it."
msgstr ""
"** Шаблонът за обект на обекти ** е софтуерен шаблон за създаване на дизайн, "
"който използва набор от инициализирани обекти, поддържани в готовност за "
"използване - \"пул\" - вместо да ги разпределя и унищожава при поискване. "
"Клиент на пула ще поиска обект от пула и ще извърши операции върху върнатия "
"обект. Когато клиентът завърши, той връща обекта, който е специфичен тип "
"фабричен обект, в пула, вместо да го унищожава."

#: ../../Creational/Pool/README.rst:11
msgid ""
"Object pooling can offer a significant performance boost in situations where "
"the cost of initializing a class instance is high, the rate of instantiation "
"of a class is high, and the number of instances in use at any one time is "
"low. The pooled object is obtained in predictable time when creation of the "
"new objects (especially over network) may take variable time."
msgstr ""
"Обединяването на обекти може да предложи значително подобрение на "
"производителността в ситуации, когато цената за инициализиране на екземпляр "
"на клас е висока, скоростта на създаване на екземпляр на клас е висока и "
"броят на използваните екземпляри по всяко време е нисък. Обединеният обект "
"се получава в предвидимо време, когато създаването на новите обекти (особено "
"по мрежа) може да отнеме променливо време."

#: ../../Creational/Pool/README.rst:18
msgid ""
"However these benefits are mostly true for objects that are expensive with "
"respect to time, such as database connections, socket connections, threads "
"and large graphic objects like fonts or bitmaps. In certain situations, "
"simple object pooling (that hold no external resources, but only occupy "
"memory) may not be efficient and could decrease performance."
msgstr ""
"Тези предимства обаче важат най-вече за обекти, които са скъпи по отношение "
"на времето, като връзки към база данни, връзки на сокети, нишки и големи "
"графични обекти като шрифтове или растерни изображения. В определени "
"ситуации простото обединяване на обекти (които не съдържат външни ресурси, а "
"само заемат памет) може да не е ефективно и да намали производителността."

#: ../../Creational/Pool/README.rst:25
msgid "UML Diagram"
msgstr "UML Диаграма"

#: ../../Creational/Pool/README.rst:32
msgid "Code"
msgstr "Код"

#: ../../Creational/Pool/README.rst:34
msgid "You can also find this code on `GitHub`_"
msgstr "Можете също да намерите този код в `GitHub`_"

#: ../../Creational/Pool/README.rst:55
msgid "Test"
msgstr "Тест"
