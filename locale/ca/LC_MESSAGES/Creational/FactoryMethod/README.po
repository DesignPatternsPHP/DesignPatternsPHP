# 
msgid ""
msgstr ""
"Project-Id-Version: DesignPatternsPHP 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 12:18+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../Creational/FactoryMethod/README.rst:2
msgid "`Factory Method`__"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:5
msgid "Purpose"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:7
msgid ""
"The good point over the SimpleFactory is you can subclass it to implement "
"different ways to create objects"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:10
msgid "For simple case, this abstract class could be just an interface"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:12
msgid ""
"This pattern is a \"real\" Design Pattern because it achieves the "
"Dependency Inversion principle a.k.a the \"D\" in SOLID principles."
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:15
msgid ""
"It means the FactoryMethod class depends on abstractions, not concrete "
"classes. This is the real trick compared to SimpleFactory or StaticFactory."
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:20
msgid "UML Diagram"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:27
msgid "Code"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:29
msgid "You can also find this code on `GitHub`_"
msgstr ""

#: ../../Creational/FactoryMethod/README.rst:74
msgid "Test"
msgstr ""
